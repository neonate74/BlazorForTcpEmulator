@page "/"
@using TcpEmulator.Connection;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<div>Welcome to your new app.</div>

<div style="margin-bottom: 10px;">
    <button class="btn btn-primary" @onclick="ChangeTcpConnectorStatus">@BtnConnectString</button>
</div>

<div>@connectedString</div>
<div>@receivedString</div>

@code {
    private string BtnConnectString = "Connect";
    private string connectedString;
    private string receivedString;

    protected override async Task OnInitializedAsync()
    {
        if (TcpEmulatorForBlazor.Program.TcpConnector != null)
        {
            try
            {
                TcpEmulatorForBlazor.Program.TcpConnector.ConnectedConnection -= tcpConnector_ConnectionConnected;
                TcpEmulatorForBlazor.Program.TcpConnector.DisConnectedConnection -= tcpConnector_DisConnectedConnection;
                TcpEmulatorForBlazor.Program.TcpConnector.DataReceived -= tcpConnector_DataReceived;
            }
            catch { }

            TcpEmulatorForBlazor.Program.TcpConnector.ConnectedConnection += tcpConnector_ConnectionConnected;
            TcpEmulatorForBlazor.Program.TcpConnector.DisConnectedConnection += tcpConnector_DisConnectedConnection;
            TcpEmulatorForBlazor.Program.TcpConnector.DataReceived += tcpConnector_DataReceived;

            this.DisplayTcpConnectorStatus();
        }
    }

    private void ChangeTcpConnectorStatus()
    {
        if (this.BtnConnectString == "Connect")
        {
            TcpEmulatorForBlazor.Program.TcpConnector.DoConnect();
        }
        else
        {
            TcpEmulatorForBlazor.Program.TcpConnector.DoDisconnect();
        }
    }

    private void tcpConnector_DataReceived(object sender, EventArgs e)
    {
        if (TcpEmulatorForBlazor.Program.TcpConnector != null)
        {
            this.receivedString = TcpEmulatorForBlazor.Program.TcpConnector.ReceivedDataString;

            InvokeAsync(StateHasChanged);
        }
    }

    private void DisplayTcpConnectorStatus(bool IsConnected = false)
    {
        if (TcpEmulatorForBlazor.Program.TcpConnector != null)
        {
            IsConnected = TcpEmulatorForBlazor.Program.TcpConnector.IsConnected;
        }

        if (IsConnected)
        {
            this.connectedString = "접속성공";
            BtnConnectString = "DisConnect";
        }
        else
        {
            this.connectedString = "접속해제";
            BtnConnectString = "Connect";
        }

        InvokeAsync(StateHasChanged);
    }

    private void tcpConnector_DisConnectedConnection(object sender, EventArgs e)
    {
        this.DisplayTcpConnectorStatus(false);
    }

    private void tcpConnector_ConnectionConnected(object sender, EventArgs e)
    {
        this.DisplayTcpConnectorStatus(true);
    }
}